"use strict";"serviceWorker"in navigator&&(navigator.serviceWorker.register("worker.js").then(e=>{console.log("Service Worker Registered")}).catch(e=>{console.log("Error registering: Not on HTTPS")}),navigator.serviceWorker.ready.then(e=>{e.active.postMessage("Hi service worker")}),navigator.serviceWorker.addEventListener("message",e=>{e=e.data;"meteo"===e.type&&localStorage.setItem("weatherData",e.data),"address"===e.type&&localStorage.setItem("address",e.data)}));const startAppWFlags=e=>Elm.Main.init({node:document.getElementById("root"),flags:e}),cachedWeatherData=localStorage.getItem("weatherData"),cachedAddressData=localStorage.getItem("address");try{if(cachedWeatherData&&cachedAddressData){const g=JSON.parse(cachedWeatherData),h=JSON.parse(cachedAddressData);main(startAppWFlags({cachedWeatherData:g,country:h.address.country,state:h.address.state,posixTimeNow:Date.now()}))}else if(cachedWeatherData){const i=JSON.parse(cachedWeatherData);main(startAppWFlags({cachedWeatherData:i,posixTimeNow:Date.now()}))}else startWithNoCache()}catch{startWithNoCache()}function startWithNoCache(){navigator.permissions?navigator.permissions.query({name:"geolocation"}).then(e=>{"granted"===e.state?navigator.geolocation?navigator.geolocation.getCurrentPosition(e=>{main(startAppWFlags(e.coords))},e=>{var a=startAppWFlags();a.ports.errorObtainingCurrentPosition.send(e.code),main(a)}):main(startAppWFlags()):"prompt"!==e.state&&"denied"!==e.state||main(startAppWFlags())}):main(startAppWFlags())}function main(a){a.ports.requestLocationPerms.subscribe(()=>{navigator.geolocation?navigator.geolocation.getCurrentPosition(e=>a.ports.locationReceiver.send(e.coords),e=>a.ports.errorObtainingCurrentPosition.send(e.code)):a.ports.noGeoLocationApiAvailableReceiver.send()})}