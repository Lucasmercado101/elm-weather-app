"use strict";var _a,_b;"serviceWorker"in navigator&&(navigator.serviceWorker.register("worker.js").then(e=>{console.log("Service Worker Registered")}).catch(e=>{console.log("Error registering: Not on HTTPS")}),navigator.serviceWorker.addEventListener("message",e=>{e=e.data;"meteo"===e.type&&localStorage.setItem("WEATHER_DATA",e.data),"address"===e.type&&(null==e.data?localStorage.removeItem("ADDRESS_DATA"):localStorage.setItem("ADDRESS_DATA",e.data))}));const startAppWFlags=e=>Elm.Main.init({node:document.getElementById("root"),flags:e}),freshAppStart=()=>Elm.Main.init({node:document.getElementById("root"),flags:navigator.language||navigator.userLanguage}),cachedWeatherData=localStorage.getItem("WEATHER_DATA"),cachedAddressData=localStorage.getItem("ADDRESS_DATA"),theme=localStorage.getItem("THEME"),customThemes=localStorage.getItem("THEMES"),usingGeo=localStorage.getItem("USING_GEOLOCATION"),lang=localStorage.getItem("LANGUAGE");let parsedTheme=null,parsedCustomThemes=null,usingGeoLocation=!1,language=1;const timeZone=Intl.DateTimeFormat().resolvedOptions().timeZone;try{if(theme){const f=255*(parsedTheme=JSON.parse(theme)).primary.r,g=255*parsedTheme.primary.g,h=255*parsedTheme.primary.b;document.body.style.background=`rgb(${f}, ${g}, ${h})`}else document.body.style.background="rgb(254, 225, 66)";if(customThemes&&(parsedCustomThemes=JSON.parse(customThemes)),usingGeo&&(usingGeoLocation=JSON.parse(usingGeo)),lang&&(language=JSON.parse(lang)),cachedWeatherData&&cachedAddressData){const i=JSON.parse(cachedWeatherData),j=JSON.parse(cachedAddressData);main(startAppWFlags({posixTimeNow:Date.now(),cachedWeatherData:i,addressData:{country:j.address.country,city:null!=(_a=j.address.city)?_a:null,state:null!=(_b=j.address.state)?_b:null},usingGeoLocation:usingGeoLocation,language:language||navigator.language||navigator.userLanguage,theme:parsedTheme,customThemes:parsedCustomThemes,timezone:timeZone}))}else if(cachedWeatherData){const k=JSON.parse(cachedWeatherData);main(startAppWFlags({posixTimeNow:Date.now(),cachedWeatherData:k,usingGeoLocation:usingGeoLocation,language:language||navigator.language||navigator.userLanguage,theme:parsedTheme,customThemes:parsedCustomThemes,timezone:timeZone}))}else main(freshAppStart())}catch(e){main(freshAppStart())}function main(a){(navigator.onLine?a.ports.wentOnline:a.ports.wentOffline).send(null),window.addEventListener("online",()=>a.ports.wentOnline.send(null)),window.addEventListener("offline",()=>a.ports.wentOffline.send(null)),a.ports.checkIfIsOnline.subscribe(()=>{(navigator.onLine?a.ports.wentOnline:a.ports.wentOffline).send(null)}),a.ports.requestLocation.subscribe(()=>{navigator.geolocation?navigator.geolocation.getCurrentPosition(e=>{localStorage.setItem("USING_GEOLOCATION","true"),a.ports.locationReceiver.send(e.coords)},e=>a.ports.errorObtainingCurrentPosition.send(e.code)):a.ports.noGeoLocationApiAvailableReceiver.send(null)}),a.ports.setNotUsingGeoLocation.subscribe(()=>{localStorage.removeItem("USING_GEOLOCATION")}),a.ports.changedTheme.subscribe(e=>{var[a,t,o]=e[0],[e,r,s]=e[1];localStorage.setItem("THEME",JSON.stringify({primary:{r:a,g:t,b:o},secondary:{r:e,g:r,b:s}})),document.body.style.background=`rgb(${255*a}, ${255*t}, ${255*o})`}),a.ports.saveCustomThemes.subscribe(e=>{localStorage.setItem("THEMES",JSON.stringify(e))}),a.ports.setAppLanguage.subscribe(e=>{localStorage.setItem("LANGUAGE",JSON.stringify(e))})}