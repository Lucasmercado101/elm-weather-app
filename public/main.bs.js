// Generated by ReScript, PLEASE EDIT WITH CARE


function cachedWeatherDataFlag(cachedWeatherData) {
  return {
          posixTimeNow: Date.now(),
          cachedWeatherData: cachedWeatherData.weatherData
        };
}

function cachedWeatherAndAddressDataFlag(cachedWeatherData) {
  return {
          posixTimeNow: Date.now(),
          cachedWeatherData: cachedWeatherData.weatherData,
          country: cachedWeatherData.country,
          state: cachedWeatherData.state
        };
}

var cachedWeatherData = localStorage.getItem("weatherData");

var cachedAddressData = localStorage.getItem("address");

const startAppWFlags = (flags) =>
  Elm.Main.init({
    node: document.getElementById("root"),
    flags: flags
  });
;

try {
  if (cachedWeatherData && cachedAddressData) {
    const parsedWeatherData = JSON.parse(cachedWeatherData);
    const parsedAddressData = JSON.parse(cachedAddressData);
    main(
      startAppWFlags(
        cachedWeatherAndAddressDataFlag({
          weatherData: parsedWeatherData,
          country: parsedAddressData.address.country,
          state: parsedAddressData.address.state
        })
      )
    );
  } else if (cachedWeatherData) {
    const parsedData = JSON.parse(cachedWeatherData);
    main(
      startAppWFlags(cachedWeatherDataFlag({ cachedWeatherData: parsedData }))
    );
  } else {
    main(startAppWFlags());
  }
} catch {
  // NOTE: this is in case there's
  // an error on JSON.parse or accessing parsed data
  // i.e: undefined.country
  main(startAppWFlags());
}

function main(app) {
  app.ports.requestLocationPerms.subscribe(() => {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        (position) => app.ports.locationReceiver.send(position.coords),
        (error) => app.ports.errorObtainingCurrentPosition.send(error.code)
      );
    } else {
      app.ports.noGeoLocationApiAvailableReceiver.send();
    }
  });
}
;

export {
  cachedWeatherDataFlag ,
  cachedWeatherAndAddressDataFlag ,
  cachedWeatherData ,
  cachedAddressData ,
}
/* cachedWeatherData Not a pure module */
